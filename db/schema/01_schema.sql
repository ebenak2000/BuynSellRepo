DROP TABLE IF EXISTS USERS, PRODUCTTYPE, PRODUCT, FEATURED, FAVORITES, ADMIN, MESSAGE, SALES CASCADE;


-- User Table
CREATE TABLE USERS (
userID SERIAL PRIMARY KEY,
firstName VARCHAR(255),
lastName VARCHAR(255),
email VARCHAR(255),
phone VARCHAR(255),
password VARCHAR(255)
);

-- PRODUCTTYPE table
CREATE TABLE PRODUCTTYPE (
    typeID SERIAL PRIMARY KEY,
    typeName VARCHAR(255),
    description TEXT
);


-- Product Table
CREATE TABLE PRODUCT(
  itemID SERIAL PRIMARY KEY,
  userID INTEGER,
  typeID INTEGER,
  title VARCHAR(255),
  description TEXT,
  price INTEGER,
  status BOOLEAN,
  FOREIGN KEY (userID) REFERENCES USERS(userID),
  FOREIGN KEY (typeID) REFERENCES PRODUCTTYPE(typeID)
);

-- featured items table
CREATE TABLE FEATURED(
  featuredID SERIAL PRIMARY KEY,
  itemID INTEGER,
  dateListed DATE,
  FOREIGN KEY (itemID) REFERENCES PRODUCT(itemID)
);

--Favorite Table
CREATE TABLE FAVORITES (
  favoriteID SERIAL PRIMARY KEY,
  userID INTEGER,
  itemID INTEGER,
  FOREIGN KEY (userID) REFERENCES USERS(userID),
  FOREIGN KEY (itemID) REFERENCES PRODUCT(itemID)
);

-- Admin table
CREATE TABLE ADMIN(
  adminID SERIAL PRIMARY KEY,
  userID INTEGER,
  FOREIGN KEY (userID) REFERENCES USERS(userID)
);

-- Messages table
CREATE TABLE MESSAGE(
  messageID SERIAL PRIMARY KEY,
  senderID INTEGER,
  receiverID INTEGER,
  itemID  INTEGER,
  content TEXT,
  timeIndicator TIMESTAMP,
  FOREIGN KEY (senderID) REFERENCES USERS(userID),
  FOREIGN KEY (receiverID) REFERENCES ADMIN(adminID),
  FOREIGN KEY (itemID) REFERENCES PRODUCT(itemID)
);

-- Sales Table
CREATE TABLE SALES(
  saleID SERIAL PRIMARY KEY,
  itemID INTEGER,
  sellerID INTEGER,
  buyerID INTEGER,
  price INTEGER,
  FOREIGN KEY (itemID) REFERENCES PRODUCT(itemID),
  FOREIGN KEY (sellerID) REFERENCES ADMIN(adminID),
  FOREIGN KEY (buyerID) REFERENCES USERS(userID)
);
